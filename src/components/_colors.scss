// Colors

$purple: (
  "base": #b5519a,
  "dark": #a83580,
  "light": #db7bc2
);

$shades: (
  "black": #000000,
  "white": #ffffff,
  "dark": #212121,
  "light": #f2f2f2,
  "transparent": transparent
);

$colors: (
  "purple": $purple
);

// Usage: color("name_of_color", "type_of_color")
@function color($color, $type) {
  @if map-has-key($colors, $color) {
    $current: map-get($colors, $color);
    @if map-has-key($current, $type) {
      @return map-get($current, $type);
    }
  }

  @warn "Unknown `#{$color}` - `#{$type}` in $colors.";
  @return null;
}

// Usage: shade("name_of_shade")
@function shade($type) {
  @if map-has-key($shades, $type) {
    @return map-get($shades, $type);
  }

  @warn "Unknown `#{$type}` in $shades.";
  @return null;
}

// Color Classes
@each $color_name, $color in $colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" {
      .#{$color_name} {
        background-color: $color_value !important;
      }
      .#{$color_name}-text {
        color: $color_value !important;
      }
    } @else {
      .#{$color_name}-#{$color_type} {
        background-color: $color_value !important;
      }
      .#{$color_name}-#{$color_type}-text {
        color: $color_value !important;
      }
    }
  }
}

// Shade classes
@each $shade, $shade_value in $shades {
  .#{$shade} {
    background-color: $shade_value !important;
  }
  .#{$shade}-text {
    color: $shade_value !important;
  }
}
